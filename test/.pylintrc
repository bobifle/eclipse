# This is a configuration file for pylint to be used for checking the
# quality of the Melange code
#
# just run:
# scripts/pylint/do_pylint.sh

[MASTER]

# Python code to execute, usually for sys.path manipulation such as
# pygtk.require().
# init-hook does not work, http://www.logilab.org/ticket/5677
# init-hook="execfile('~/.pylint_init_hook.py')"

# Profiled execution.
profile=no

# Add <file or directory> to the black list. It should be a base name, not a
# path. You may set this option multiple times.
ignore=

# Pickle collected data for later comparisons.
persistent=no

# Set the cache size for astng objects.
cache-size=500

# List of plugins (as comma separated values of python modules names) to load,
# usually to register additional checkers.
load-plugins=


[MESSAGES CONTROL]

# Enable the message(s) with the given id(s).
#enable=


# Disable the message(s) with the given id(s).
# List of all available ids: http://www.logilab.org/card/pylintfeatures
# Potential messages that might be added later include:
# C0302,R0201

# Disabled messages:
# [C0301] line too long (80)
# [W0331] Use of the <> operator
# [W0105] String statement has no effect (epydoc use it)
# [W0621] Redefining name  from outer scope
# [E1103] Class <class> has no <member> member (but some types could not be inferred)
# [W0232] Class has no __init__ method

# disable=C0301,W0331,W0105,W0621,E1103,W0232
# pylint 0.21 is bugg, if -E is specified (errors only) it will reenable all Error ID. So let's disable all the categories C,W,R,F here
# so we don't need to specify the -E option
#disable=C,R,F,W,similarities,C0301,W0331,W0105,W0621,E1103,W0232,W0141
disable=C,R,F,similarities,W1201,W0403


[REPORTS]

# set the output format. Available formats are text, parseable, colorized, msvs
# (visual studio) and html
output-format=text

# Put messages in a separate file for each module / package specified on the
# command line instead of printing them on stdout. Reports (if any) will be
# written in a file name "pylint_global.[txt|html]".
files-output=no

# Tells wether to display a full report or only the messages
reports=no

# Python expression which should return a note less than 10 (10 is the highest
# note).You have access to the variables errors warning, statement which
# respectivly contain the number of errors / warnings messages and the total
# number of statements analyzed. This is used by the global evaluation report
# (R0004).
evaluation=10.0 - ((float(5 * error + warning + refactor + convention) / statement) * 10)

# Add a comment according to your evaluation note. This is used by the global
# evaluation report (R0004).
comment=no

# Activate the evaluation score.
score=no

# Enable the report(s) with the given id(s).
#enable-report=

# Disable the report(s) with the given id(s).
#disable-report=


# checks for :
# * doc strings
# * modules / classes / functions / methods / arguments / variables name
# * number of arguments, local variables, branchs, returns and statements in
# functions, methods
# * required module attributes
# * dangerous default values as arguments
# * redefinition of function / method / class
# * uses of the global statement
#
[BASIC]

# Required attributes for module, separated by a comma
required-attributes=

# Regular expression which should only match functions or classes name which do
# not require a docstring
no-docstring-rgx=_.*

# Regular expression which should only match correct module names
module-rgx=([a-z_][a-zA-Z0-9]*)$

# Regular expression which should only match correct module level names
const-rgx=(([A-Z_][A-Z0-9_]*)|(__.*__)|([a-z_][a-zA-Z0-9]*))$

# Regular expression which should only match correct class names
class-rgx=[A-Z][a-zA-Z0-9_]+$

# Regular expression which should only match correct function names
function-rgx=[a-z_][a-zA-Z0-9]{2,40}$

# Regular expression which should only match correct method names
method-rgx=(([a-z_][a-zA-Z0-9]{2,40})|(__.*__))$

# Regular expression which should only match correct instance attribute names
attr-rgx=[a-z_][A-Za-z0-9]{1,30}$
#alternative
#attr-rgx=([a-z_][a-z0-9_]{2,30}|([a-z_][a-zA-Z0-9]{2,30}))$

# Regular expression which should only match correct argument names
argument-rgx=[a-z_][A-Za-z0-9]{1,30}$

# Regular expression which should only match correct variable names
variable-rgx=[a-z_][a-zA-Z0-9]{1,30}$

# Regular expression which should only match correct list comprehension /
# generator expression variable names
inlinevar-rgx=[A-Za-z_][A-Za-z0-9_]*$

# Good variable names which should always be accepted, separated by a comma
good-names=_

# Bad variable names which should always be refused, separated by a comma
bad-names=foo,bar,baz,toto,tutu,tata

# List of builtins function names that should not be used, separated by a comma
bad-functions=map,filter,apply,input,eval,exec


# try to find bugs in the code using type inference
#
[TYPECHECK]

# Tells wether missing members accessed in mixin class should be ignored. A
# mixin class is detected if its name ends with "mixin" (case insensitive).
ignore-mixin-members=yes

# List of classes names for which member attributes should not be checked
# (useful for classes with attributes dynamicaly set).
# ignored-classes=SQLObject

# When zope mode is activated, consider the acquired-members option to ignore
# access to some undefined attributes.
zope=no

# List of members which are usually get through zope's acquisition mecanism and
# so shouldn't trigger E0201 when accessed (need zope=yes to be considered).
# acquired-members=REQUEST,acl_users,aq_parent


# checks for
# * unused variables / imports
# * undefined variables
# * redefinition of variable from builtins or from an outer scope
# * use of variable before assigment
#
[VARIABLES]


# Tells wether we should check for unused import in __init__ files.
init-import=no

# A regular expression matching names used for dummy variables (i.e. not used).
dummy-variables-rgx=_|dummy

# List of additional names supposed to be defined in builtins. Remember that
# you should avoid to define new builtins when possible.
# The list is yet pretty impressive, the usage of global names in the framework is
# far too spreaded
additional-builtins=

# checks for :
# * methods without self as first argument
# * overridden methods signature
# * access only to existant members via self
# * attributes not defined in the __init__ method
# * supported interfaces implementation
# * unreachable code
#
[CLASSES]

# List of interface methods to ignore, separated by a comma. 
ignore-iface-methods=

# List of method names used to declare (i.e. assign) instance attributes.
defining-attr-methods=__init__,__new__,setUp


# checks for
# * external modules dependencies
# * relative / wildcard imports
# * cyclic imports
# * uses of deprecated modules
#
[IMPORTS]

# Deprecated modules which should not be used, separated by a comma
deprecated-modules=regsub,string,TERMIOS,Bastion,rexec

# Create a graph of every (i.e. internal and external) dependencies in the
# given file (report R0402 must not be disabled)
import-graph=

# Create a graph of external dependencies in the given file (report R0402 must
# not be disabled)
ext-import-graph=

# Create a graph of internal dependencies in the given file (report R0402 must
# not be disabled)
int-import-graph=


# checks for :
# * unauthorized constructions
# * strict indentation
# * line length
# * use of <> instead of !=
#
[FORMAT]

# Maximum number of characters on a single line.
max-line-length=120

# Maximum number of lines in a module
max-module-lines=5000

# String used as indentation unit. This is usually " " (4 spaces) or "\t" (1
# tab).
indent-string='\t'


# checks for:
# * warning notes in the code like TODO
# * PEP 263: source code with non ascii character but no encoding declaration
#
[MISCELLANEOUS]

# List of note tags to take in consideration, separated by a comma.
notes=TODO

# Template used to display messages. This is a python new-style format string
# used to format the message information. See doc for all details
msg-template='{path}:{msg_id}:{line:3d},{column}: {obj}: {msg}'


# checks for similarities and duplicated code. This computation may be
# memory / CPU intensive, so you should disable it if you experiments some
# problems.
#
[SIMILARITIES]

# Minimum lines number of a similarity.
min-similarity-lines=4

# Ignore comments when computing similarities.
ignore-comments=yes

# Ignore docstrings when computing similarities.
ignore-docstrings=yes
